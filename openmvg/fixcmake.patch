diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 9cfd06c..0606f0c 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -39,6 +39,10 @@ option(OpenMVG_USE_OPENCV "Build or not opencv+openMVG samples programs" OFF)
 # ==============================================================================
 option(OpenMVG_USE_OCVSIFT "Add or not OpenCV SIFT in available features" OFF)
 
+if(OpenMVG_BUILD_SHARED AND MSVC)
+  set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif(OpenMVG_BUILD_SHARED AND MSVC)
+
 # ==============================================================================
 # OpenMVG version
 # ==============================================================================
@@ -58,8 +62,11 @@ if (NOT CMAKE_BUILD_TYPE AND NOT MSVC)
 endif (NOT CMAKE_BUILD_TYPE AND NOT MSVC)
 
 # Set build path
-set(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_BUILD_TYPE}")
-set(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_BUILD_TYPE}")
+# set(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_BUILD_TYPE}")
+# set(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_BUILD_TYPE}")
+set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
+set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
+set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
 
 # ==============================================================================
 # Macro used to forward compiler preprocessors to OpenMVGConfig.cmake targets
@@ -88,11 +95,11 @@ endif()
 # ==============================================================================
 # Check that submodule have been initialized and updated
 # ==============================================================================
-if (NOT EXISTS ${PROJECT_SOURCE_DIR}/dependencies/cereal/include)
-  message(FATAL_ERROR
-    "\n submodule(s) are missing, please update your repository:\n"
-    "  > git submodule update -i\n")
-endif()
+# if (NOT EXISTS ${PROJECT_SOURCE_DIR}/dependencies/cereal/include)
+#   message(FATAL_ERROR
+#     "\n submodule(s) are missing, please update your repository:\n"
+#     "  > git submodule update -i\n")
+# endif()
 
 # ==============================================================================
 # Additional cmake find modules
@@ -183,12 +190,12 @@ if (OpenMVG_BUILD_OPENGL_EXAMPLES)
 endif (OpenMVG_BUILD_OPENGL_EXAMPLES)
 
 # Dependencies install rules
-install(
-  DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/
-  DESTINATION include/openMVG_dependencies
-  COMPONENT headers
-  FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h"
-)
+# install(
+#   DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/
+#   DESTINATION include/openMVG_dependencies
+#   COMPONENT headers
+#   FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h"
+# )
 
 # ==============================================================================
 # --END-- SUBMODULE CONFIGURATION
@@ -225,18 +232,18 @@ ENDMACRO(UNIT_TEST)
 # - external by default
 # - internal if cereal not found
 # ==============================================================================
-find_package(cereal QUIET CONFIG)
-if (NOT TARGET cereal)
-  add_library(cereal INTERFACE)
-  target_include_directories(cereal
-    INTERFACE
-      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/dependencies/cereal/include>
-      $<INSTALL_INTERFACE:include/openMVG_dependencies/cereal/include>
-  )
-  install(TARGETS cereal EXPORT openMVG-targets)
-
-  set(OpenMVG_USE_INTERNAL_CEREAL ON)
-endif()
+find_package(cereal REQUIRED CONFIG)
+# if (NOT TARGET cereal)
+#   add_library(cereal INTERFACE)
+#   target_include_directories(cereal
+#     INTERFACE
+#       $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/dependencies/cereal/include>
+#       $<INSTALL_INTERFACE:include/openMVG_dependencies/cereal/include>
+#   )
+#   install(TARGETS cereal EXPORT openMVG-targets)
+
+#   set(OpenMVG_USE_INTERNAL_CEREAL ON)
+# endif()
 
 # ==============================================================================
 # Eigen
@@ -245,14 +252,14 @@ endif()
 # - external if EIGEN_INCLUDE_DIR_HINTS is defined
 # - internal if Eigen not found
 # ==============================================================================
-find_package(Eigen3 QUIET)
-if (NOT Eigen3_FOUND)
-  set(EIGEN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/eigen)
-  set(OpenMVG_USE_INTERNAL_EIGEN ON)
-  find_package(Eigen QUIET)
-else()
-  set(EIGEN_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})
-endif()
+find_package(Eigen REQUIRED)
+# if (NOT Eigen3_FOUND)
+#   set(EIGEN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/eigen)
+#   set(OpenMVG_USE_INTERNAL_EIGEN ON)
+#   find_package(Eigen QUIET)
+# else()
+#   set(EIGEN_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})
+# endif()
 
 # ==============================================================================
 # Ceres
@@ -260,17 +267,17 @@ endif()
 # - external by default if CERES_DIR_HINTS or find_package found a valid Ceres
 # - internal if ceres not found (ceres-solver+cxsparse+miniglog)
 # ==============================================================================
-find_package(Ceres QUIET HINTS ${CERES_DIR_HINTS})
-if (NOT Ceres_FOUND)
-  set(OpenMVG_USE_INTERNAL_CERES ON)
-  set(CERES_INCLUDE_DIRS
-    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include
-    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog
-    ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)
-    FILE(READ "${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION" CERES_CONFIG)
-    STRING(REGEX REPLACE "version ([0-9.]+).*" "\\1" CERES_VERSION ${CERES_CONFIG})
-  set(CERES_LIBRARIES openMVG_ceres)
-endif()
+find_package(Ceres REQUIRED HINTS ${CERES_DIR_HINTS})
+# if (NOT Ceres_FOUND)
+#   set(OpenMVG_USE_INTERNAL_CERES ON)
+#   set(CERES_INCLUDE_DIRS
+#     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/include
+#     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/internal/ceres/miniglog
+#     ${PROJECT_BINARY_DIR}/third_party/ceres-solver/config)
+#     FILE(READ "${CMAKE_CURRENT_SOURCE_DIR}/third_party/ceres-solver/VERSION" CERES_CONFIG)
+#     STRING(REGEX REPLACE "version ([0-9.]+).*" "\\1" CERES_VERSION ${CERES_CONFIG})
+#   set(CERES_LIBRARIES openMVG_ceres)
+# endif()
 
 # ==============================================================================
 # Flann
@@ -278,14 +285,14 @@ endif()
 # - internal by default (flann),
 # - external if FLANN_INCLUDE_DIR_HINTS and a valid Flann setup is found
 # ==============================================================================
-if (NOT DEFINED FLANN_INCLUDE_DIR_HINTS)
-  set(FLANN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
-  set(OpenMVG_USE_INTERNAL_FLANN ON)
-endif()
-find_package(Flann QUIET)
-if (NOT FLANN_FOUND OR OpenMVG_USE_INTERNAL_FLANN)
-  set(FLANN_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
-endif()
+# if (NOT DEFINED FLANN_INCLUDE_DIR_HINTS)
+#   set(FLANN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
+#   set(OpenMVG_USE_INTERNAL_FLANN ON)
+# endif()
+find_package(Flann REQUIRED)
+# if (NOT FLANN_FOUND OR OpenMVG_USE_INTERNAL_FLANN)
+#   set(FLANN_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
+# endif()
 
 # ==============================================================================
 # CoinUtils
@@ -293,15 +300,15 @@ endif()
 # - internal by default (CoinUtils),
 # - external if COINUTILS_INCLUDE_DIR_HINTS and a valid CoinUtils setup is found
 # ==============================================================================
-if (NOT DEFINED COINUTILS_INCLUDE_DIR_HINTS)
-  set(COINUTILS_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/CoinUtils/src/)
-  set(OpenMVG_USE_INTERNAL_COINUTILS ON)
-  find_package(CoinUtils QUIET)
-  set(COINUTILS_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/CoinUtils/src/)
-  set(COINUTILS_LIBRARY lib_CoinUtils)
-else()
-  find_package(CoinUtils QUIET)
-endif()
+# if (NOT DEFINED COINUTILS_INCLUDE_DIR_HINTS)
+#   set(COINUTILS_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/CoinUtils/src/)
+#   set(OpenMVG_USE_INTERNAL_COINUTILS ON)
+#   find_package(CoinUtils QUIET)
+#   set(COINUTILS_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/CoinUtils/src/)
+#   set(COINUTILS_LIBRARY lib_CoinUtils)
+# else()
+# endif()
+find_package(CoinUtils REQUIRED)
 
 ## ==============================================================================
 ## Clp
@@ -309,17 +316,17 @@ endif()
 ## - internal by default (Clp),
 ## - external if CLP_INCLUDE_DIR_HINTS and a valid Clp setup is found
 ## ==============================================================================
-if (NOT DEFINED CLP_INCLUDE_DIR_HINTS)
-  set(CLP_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/)
-  set(OpenMVG_USE_INTERNAL_CLP ON)
-  find_package(Clp QUIET)
-  set(CLP_INCLUDE_DIRS
-     ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/
-     ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/OsiClp/)
-  set(CLP_LIBRARIES lib_clp lib_OsiClpSolver)
-else()
-  find_package(Clp QUIET)
-endif()
+# if (NOT DEFINED CLP_INCLUDE_DIR_HINTS)
+#   set(CLP_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/)
+#   set(OpenMVG_USE_INTERNAL_CLP ON)
+#   find_package(Clp QUIET)
+#   set(CLP_INCLUDE_DIRS
+#      ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/
+#      ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/OsiClp/)
+#   set(CLP_LIBRARIES lib_clp lib_OsiClpSolver)
+# else()
+# endif()
+find_package(Clp REQUIRED)
 
 # ==============================================================================
 # Osi
@@ -327,26 +334,26 @@ endif()
 # - internal by default (Osi),
 # - external if OSI_INCLUDE_DIR_HINTS and a valid Osi setup is found
 # ==============================================================================
-if (NOT DEFINED OSI_INCLUDE_DIR_HINTS)
-  set(OSI_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Osi/src/)
-  set(OpenMVG_USE_INTERNAL_OSI ON)
-  find_package(Osi QUIET)
-  set(OSI_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Osi/src/Osi/)
-  set(OSI_LIBRARY lib_Osi)
-else()
-  find_package(Osi QUIET)
-endif()
+# if (NOT DEFINED OSI_INCLUDE_DIR_HINTS)
+#   set(OSI_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Osi/src/)
+#   set(OpenMVG_USE_INTERNAL_OSI ON)
+#   find_package(Osi QUIET)
+#   set(OSI_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Osi/src/Osi/)
+#   set(OSI_LIBRARY lib_Osi)
+# else()
+# endif()
+find_package(Osi REQUIRED)
 
 # ==============================================================================
 # Internal CLP/OSI/COINUTILS libraries:
 # ==============================================================================
-if (OpenMVG_USE_INTERNAL_OSI AND OpenMVG_USE_INTERNAL_CLP AND OpenMVG_USE_INTERNAL_COINUTILS)
-  add_subdirectory(dependencies/osi_clp/)
-  set_property(TARGET lib_clp PROPERTY FOLDER OpenMVG/3rdParty/lib_clp)
-  set_property(TARGET lib_CoinUtils PROPERTY FOLDER OpenMVG/3rdParty/lib_CoinUtils)
-  set_property(TARGET lib_Osi PROPERTY FOLDER OpenMVG/3rdParty/lib_Osi)
-  set_property(TARGET lib_OsiClpSolver PROPERTY FOLDER OpenMVG/3rdParty/lib_OsiClpSolver)
-endif()
+# if (OpenMVG_USE_INTERNAL_OSI AND OpenMVG_USE_INTERNAL_CLP AND OpenMVG_USE_INTERNAL_COINUTILS)
+#   add_subdirectory(dependencies/osi_clp/)
+#   set_property(TARGET lib_clp PROPERTY FOLDER OpenMVG/3rdParty/lib_clp)
+#   set_property(TARGET lib_CoinUtils PROPERTY FOLDER OpenMVG/3rdParty/lib_CoinUtils)
+#   set_property(TARGET lib_Osi PROPERTY FOLDER OpenMVG/3rdParty/lib_Osi)
+#   set_property(TARGET lib_OsiClpSolver PROPERTY FOLDER OpenMVG/3rdParty/lib_OsiClpSolver)
+# endif()
 
 # ==============================================================================
 # Lemon
@@ -385,7 +392,7 @@ endif()
 # Third-party libraries:
 # ==============================================================================
 add_subdirectory(third_party)
-add_subdirectory(testing)
+# add_subdirectory(testing)
 
 # ==============================================================================
 # openMVG modules
@@ -472,67 +479,67 @@ message("** Use OpenCV SIFT features: " ${OpenMVG_USE_OCVSIFT})
 
 message("\n")
 
-if (DEFINED OpenMVG_USE_INTERNAL_CEREAL)
+if (OpenMVG_USE_INTERNAL_CEREAL)
   message(STATUS "CEREAL: (internal)")
 else()
   message(STATUS "CEREAL: (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_EIGEN)
+if (OpenMVG_USE_INTERNAL_EIGEN)
   message(STATUS "EIGEN: " ${EIGEN_VERSION} " (internal)")
 else()
   message(STATUS "EIGEN: " ${EIGEN_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_CERES)
+if (OpenMVG_USE_INTERNAL_CERES)
   message(STATUS "CERES: " ${CERES_VERSION} " (internal)")
 else()
   message(STATUS "CERES: " ${CERES_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_FLANN)
+if (OpenMVG_USE_INTERNAL_FLANN)
   message(STATUS "FLANN: " ${FLANN_VERSION} " (internal)")
 else()
   message(STATUS "FLANN: " ${FLANN_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_TIFF)
+if (OpenMVG_USE_INTERNAL_TIFF)
   message(STATUS "LIBTIFF: " ${TIFF_VERSION_STRING} " (internal)")
 else()
   message(STATUS "LIBTIFF: " ${TIFF_VERSION_STRING} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_PNG)
+if (OpenMVG_USE_INTERNAL_PNG)
   message(STATUS "LIBPNG: " ${PNG_VERSION_STRING} " (internal)")
 else()
   message(STATUS "LIBPNG: " ${PNG_VERSION_STRING} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_JPEG)
+if (OpenMVG_USE_INTERNAL_JPEG)
   message(STATUS "LIBJPEG (internal)")
 else()
   message(STATUS "LIBJPEG (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_CLP)
+if (OpenMVG_USE_INTERNAL_CLP)
   message(STATUS "CLP: " ${CLP_VERSION} " (internal)")
 else()
   message(STATUS "CLP: " ${CLP_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_COINUTILS)
+if (OpenMVG_USE_INTERNAL_COINUTILS)
   message(STATUS "COINUTILS: " ${COINUTILS_VERSION} " (internal)")
 else()
   message(STATUS "COINUTILS: " ${COINUTILS_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_OSI)
+if (OpenMVG_USE_INTERNAL_OSI)
   message(STATUS "OSI: " ${OSI_VERSION} " (internal)")
 else()
   message(STATUS "OSI: " ${OSI_VERSION} " (external)")
 endif()
 
-if (DEFINED OpenMVG_USE_INTERNAL_LEMON)
+if (OpenMVG_USE_INTERNAL_LEMON)
   message(STATUS "LEMON: " ${LEMON_VERSION} " (internal)")
 else()
   message(STATUS "LEMON: " ${LEMON_VERSION} " (external)")
diff --git a/src/cmakeFindModules/FindClp.cmake b/src/cmakeFindModules/FindClp.cmake
index 8a69c23..97fe1e1 100644
--- a/src/cmakeFindModules/FindClp.cmake
+++ b/src/cmakeFindModules/FindClp.cmake
@@ -51,9 +51,11 @@ IF(EXISTS "${CLP_DIR}" AND NOT "${CLP_DIR}" STREQUAL "")
         SET(CLP_INCLUDE_DIR ${CLP_DIR})
 
         FIND_LIBRARY(CLP_LIBRARY NAMES Clp)
-        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver)
-        FIND_LIBRARY(OSICLP_LIBRARY NAMES OsiClp)
-
+        # FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver)
+        # FIND_LIBRARY(OSICLP_LIBRARY NAMES OsiClp)
+        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver Clp)
+        FIND_LIBRARY(OSICLP_LIBRARY NAMES OsiClp Clp)
+        
         # locate Clp libraries
         IF(DEFINED CLP_LIBRARY AND DEFINED CLPSOLVER_LIBRARY AND DEFINED OSICLP_LIBRARY)
           SET(CLP_LIBRARIES ${CLP_LIBRARY} ${CLPSOLVER_LIBRARY} ${OSICLP_LIBRARY})
diff --git a/src/openMVG/cameras/CMakeLists.txt b/src/openMVG/cameras/CMakeLists.txt
index 333ab72..3ec6ac0 100644
--- a/src/openMVG/cameras/CMakeLists.txt
+++ b/src/openMVG/cameras/CMakeLists.txt
@@ -4,8 +4,14 @@ set_property(TARGET openMVG_camera APPEND PROPERTY
   INTERFACE_INCLUDE_DIRECTORIES "$<INSTALL_INTERFACE:include>")
 
 target_compile_features(openMVG_camera INTERFACE ${CXX11_FEATURES})
-target_link_libraries(openMVG_camera INTERFACE openMVG_numeric cereal ${OPENMVG_LIBRARY_DEPENDENCIES})
-install(TARGETS openMVG_camera DESTINATION lib EXPORT openMVG-targets)
+target_link_libraries(openMVG_camera 
+  INTERFACE openMVG_numeric ${OPENMVG_LIBRARY_DEPENDENCIES})
+
+# install(TARGETS openMVG_camera DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_camera EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG Camera_Pinhole openMVG_camera)
 
diff --git a/src/openMVG/exif/CMakeLists.txt b/src/openMVG/exif/CMakeLists.txt
index 0348964..2653260 100644
--- a/src/openMVG/exif/CMakeLists.txt
+++ b/src/openMVG/exif/CMakeLists.txt
@@ -4,8 +4,10 @@ target_compile_features(openMVG_exif INTERFACE ${CXX11_FEATURES})
 target_link_libraries(openMVG_exif LINK_PRIVATE openMVG_easyexif)
 target_include_directories(openMVG_exif PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/third_party/include/easyexif)
 set_property(TARGET openMVG_exif PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_exif DESTINATION lib EXPORT openMVG-targets)
-
+install(TARGETS openMVG_exif EXPORT openMVG-targets        
+    LIBRARY DESTINATION lib
+    ARCHIVE DESTINATION lib
+    RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG exif_IO "openMVG_testing;${STLPLUS_LIBRARY};openMVG_exif")
 
diff --git a/src/openMVG/features/CMakeLists.txt b/src/openMVG/features/CMakeLists.txt
index c7d3d3b..ec62b55 100644
--- a/src/openMVG/features/CMakeLists.txt
+++ b/src/openMVG/features/CMakeLists.txt
@@ -32,14 +32,18 @@ target_include_directories(openMVG_features
     $<INSTALL_INTERFACE:include/openMVG>
 )
 target_link_libraries(openMVG_features
-  PRIVATE openMVG_fast ${STLPLUS_LIBRARY}
-  PUBLIC ${OPENMVG_LIBRARY_DEPENDENCIES} cereal)
+  PRIVATE openMVG_fast ${STLPLUS_LIBRARY} cereal
+  PUBLIC ${OPENMVG_LIBRARY_DEPENDENCIES})
 if (MSVC)
   set_target_properties(openMVG_features PROPERTIES COMPILE_FLAGS "/bigobj")
   target_compile_options(openMVG_features PUBLIC "-D_USE_MATH_DEFINES")
 endif (MSVC)
 set_target_properties(openMVG_features PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
-install(TARGETS openMVG_features DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_features EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
+
 set_property(TARGET openMVG_features PROPERTY FOLDER OpenMVG/OpenMVG)
 
 UNIT_TEST(openMVG features "openMVG_features")
diff --git a/src/openMVG/geodesy/CMakeLists.txt b/src/openMVG/geodesy/CMakeLists.txt
index f814793..39d46d7 100644
--- a/src/openMVG/geodesy/CMakeLists.txt
+++ b/src/openMVG/geodesy/CMakeLists.txt
@@ -7,6 +7,9 @@ target_link_libraries(openMVG_geodesy
   INTERFACE
     openMVG_numeric
 )
-install(TARGETS openMVG_geodesy DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_geodesy EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG_geodesy geodesy "openMVG_geodesy")
diff --git a/src/openMVG/geometry/CMakeLists.txt b/src/openMVG/geometry/CMakeLists.txt
index 0a6a016..c182340 100644
--- a/src/openMVG/geometry/CMakeLists.txt
+++ b/src/openMVG/geometry/CMakeLists.txt
@@ -21,8 +21,8 @@ set_property(TARGET openMVG_geometry PROPERTY FOLDER OpenMVG/OpenMVG)
 target_link_libraries(openMVG_geometry
   PUBLIC
     openMVG_numeric
-    cereal
   PRIVATE
+    cereal
     openMVG_linearProgramming
 )
 target_include_directories(openMVG_geometry
@@ -30,7 +30,10 @@ target_include_directories(openMVG_geometry
     $<INSTALL_INTERFACE:include>
 )
 
-install(TARGETS openMVG_geometry DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_geometry EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG convex_hull "openMVG_geometry")
 UNIT_TEST(openMVG rigid_transformation3D_srt "openMVG_geometry")
diff --git a/src/openMVG/graph/CMakeLists.txt b/src/openMVG/graph/CMakeLists.txt
index 3cb31ad..bd3c2e2 100644
--- a/src/openMVG/graph/CMakeLists.txt
+++ b/src/openMVG/graph/CMakeLists.txt
@@ -2,7 +2,10 @@
 add_library(openMVG_graph INTERFACE)
 target_compile_features(openMVG_graph INTERFACE ${CXX11_FEATURES})
 target_link_libraries(openMVG_graph INTERFACE ${LEMON_LIBRARY})
-install(TARGETS openMVG_graph DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_graph EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG_graph connectedComponent "openMVG_testing;openMVG_graph")
 UNIT_TEST(openMVG_graph triplet_finder "openMVG_testing;openMVG_graph")
diff --git a/src/openMVG/image/CMakeLists.txt b/src/openMVG/image/CMakeLists.txt
index 6913d19..3762e1a 100644
--- a/src/openMVG/image/CMakeLists.txt
+++ b/src/openMVG/image/CMakeLists.txt
@@ -38,7 +38,10 @@ if (MSVC)
 endif (MSVC)
 set_target_properties(openMVG_image PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_image PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_image DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_image EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG image "openMVG_image")
 UNIT_TEST(openMVG image_drawing "openMVG_image")
diff --git a/src/openMVG/linearProgramming/CMakeLists.txt b/src/openMVG/linearProgramming/CMakeLists.txt
index cc5212f..19bf007 100644
--- a/src/openMVG/linearProgramming/CMakeLists.txt
+++ b/src/openMVG/linearProgramming/CMakeLists.txt
@@ -8,7 +8,11 @@ add_library(openMVG_linearProgramming
 target_compile_features(openMVG_linearProgramming INTERFACE ${CXX11_FEATURES})
 
 set_property(TARGET openMVG_linearProgramming PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_linearProgramming DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_linearProgramming EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
+
 set_target_properties(openMVG_linearProgramming PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 
 target_link_libraries(openMVG_linearProgramming
diff --git a/src/openMVG/linearProgramming/lInfinityCV/CMakeLists.txt b/src/openMVG/linearProgramming/lInfinityCV/CMakeLists.txt
index e10c945..68077db 100644
--- a/src/openMVG/linearProgramming/lInfinityCV/CMakeLists.txt
+++ b/src/openMVG/linearProgramming/lInfinityCV/CMakeLists.txt
@@ -21,7 +21,10 @@ target_compile_features(openMVG_lInftyComputerVision INTERFACE ${CXX11_FEATURES}
 target_link_libraries(openMVG_lInftyComputerVision PUBLIC openMVG_linearProgramming openMVG_multiview)
 set_target_properties(openMVG_lInftyComputerVision PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_lInftyComputerVision PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_lInftyComputerVision DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_lInftyComputerVision EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 set(LOCAL_LIBS
   openMVG_lInftyComputerVision
diff --git a/src/openMVG/matching/CMakeLists.txt b/src/openMVG/matching/CMakeLists.txt
index 5fcd972..e04d385 100644
--- a/src/openMVG/matching/CMakeLists.txt
+++ b/src/openMVG/matching/CMakeLists.txt
@@ -34,12 +34,12 @@ target_link_libraries(openMVG_matching
   PRIVATE
     ${STLPLUS_LIBRARY}
     ${OPENMVG_LIBRARY_DEPENDENCIES}
+    cereal
   PUBLIC
     openMVG_features
     Threads::Threads
-    cereal
 )
-if (NOT DEFINED OpenMVG_USE_INTERNAL_FLANN)
+if (NOT OpenMVG_USE_INTERNAL_FLANN)
 target_link_libraries(openMVG_matching
   PUBLIC
     ${FLANN_LIBRARIES}
@@ -55,7 +55,10 @@ if (USE_AVX2)
   endif (UNIX)
 endif (USE_AVX2)
 
-install(TARGETS openMVG_matching DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_matching EXPORT openMVG-targets
+      LIBRARY DESTINATION lib
+      ARCHIVE DESTINATION lib
+      RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG matching "openMVG_matching")
 UNIT_TEST(openMVG matching_filters "openMVG_matching")
diff --git a/src/openMVG/matching/kvld/CMakeLists.txt b/src/openMVG/matching/kvld/CMakeLists.txt
index 0c9cb99..5f2d1e6 100644
--- a/src/openMVG/matching/kvld/CMakeLists.txt
+++ b/src/openMVG/matching/kvld/CMakeLists.txt
@@ -5,4 +5,7 @@ target_link_libraries(openMVG_kvld
   PUBLIC openMVG_features openMVG_image)
 set_target_properties(openMVG_kvld PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_kvld PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_kvld DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_kvld EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
diff --git a/src/openMVG/matching_image_collection/CMakeLists.txt b/src/openMVG/matching_image_collection/CMakeLists.txt
index 1afd2bc..b0e9efe 100644
--- a/src/openMVG/matching_image_collection/CMakeLists.txt
+++ b/src/openMVG/matching_image_collection/CMakeLists.txt
@@ -31,6 +31,9 @@ target_include_directories(openMVG_matching_image_collection
 )
 set_target_properties(openMVG_matching_image_collection PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_matching_image_collection PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_matching_image_collection DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_matching_image_collection EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG Pair_Builder "openMVG_matching_image_collection")
diff --git a/src/openMVG/multiview/CMakeLists.txt b/src/openMVG/multiview/CMakeLists.txt
index 91f1bc3..f1e1c4b 100644
--- a/src/openMVG/multiview/CMakeLists.txt
+++ b/src/openMVG/multiview/CMakeLists.txt
@@ -23,7 +23,10 @@ add_library(openMVG_multiview
   ${multiview_files_cpp})
 target_compile_features(openMVG_multiview INTERFACE ${CXX11_FEATURES})
 set_property(TARGET openMVG_multiview PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_multiview DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_multiview EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 target_link_libraries(openMVG_multiview
   PUBLIC
     openMVG_numeric
diff --git a/src/openMVG/numeric/CMakeLists.txt b/src/openMVG/numeric/CMakeLists.txt
index 1f3fc30..3c5f629 100644
--- a/src/openMVG/numeric/CMakeLists.txt
+++ b/src/openMVG/numeric/CMakeLists.txt
@@ -26,7 +26,7 @@ target_include_directories(openMVG_numeric
     $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
     $<INSTALL_INTERFACE:include>
 )
-if (DEFINED OpenMVG_USE_INTERNAL_EIGEN)
+if (OpenMVG_USE_INTERNAL_EIGEN)
   target_include_directories(openMVG_numeric PUBLIC
     $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/openMVG/third_party/eigen/>)
 else()
@@ -39,7 +39,10 @@ if (MSVC)
 endif (MSVC)
 set_target_properties(openMVG_numeric PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_numeric PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_numeric DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_numeric EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG extract_columns openMVG_numeric)
 UNIT_TEST(openMVG numeric openMVG_numeric)
diff --git a/src/openMVG/robust_estimation/CMakeLists.txt b/src/openMVG/robust_estimation/CMakeLists.txt
index e573214..2be269d 100644
--- a/src/openMVG/robust_estimation/CMakeLists.txt
+++ b/src/openMVG/robust_estimation/CMakeLists.txt
@@ -20,7 +20,10 @@ target_link_libraries(openMVG_robust_estimation
     openMVG_numeric
 )
 set_property(TARGET openMVG_robust_estimation PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_robust_estimation DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_robust_estimation EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 set_target_properties(
   openMVG_robust_estimation
   PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR}
diff --git a/src/openMVG/sfm/CMakeLists.txt b/src/openMVG/sfm/CMakeLists.txt
index bd28767..cfdb7e6 100644
--- a/src/openMVG/sfm/CMakeLists.txt
+++ b/src/openMVG/sfm/CMakeLists.txt
@@ -25,6 +25,7 @@ target_link_libraries(openMVG_sfm
     openMVG_graph
     openMVG_matching
     openMVG_multiview
+  PRIVATE
     cereal
     ${OPENMVG_LIBRARY_DEPENDENCIES}
 )
@@ -50,7 +51,10 @@ if (MSVC)
 endif (MSVC)
 set_target_properties(openMVG_sfm PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_sfm PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_sfm DESTINATION lib EXPORT openMVG-targets)
+install(TARGETS openMVG_sfm EXPORT openMVG-targets
+LIBRARY DESTINATION lib
+ARCHIVE DESTINATION lib
+RUNTIME DESTINATION bin)
 
 UNIT_TEST(openMVG sfm_data_io "openMVG_sfm;${STLPLUS_LIBRARY}")
 UNIT_TEST(openMVG sfm_data_BA "openMVG_multiview_test_data;openMVG_sfm;${STLPLUS_LIBRARY}")
diff --git a/src/openMVG/system/CMakeLists.txt b/src/openMVG/system/CMakeLists.txt
index c5f2844..96da4eb 100644
--- a/src/openMVG/system/CMakeLists.txt
+++ b/src/openMVG/system/CMakeLists.txt
@@ -6,7 +6,10 @@ target_include_directories(openMVG_system PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURC
 target_compile_features(openMVG_system INTERFACE ${CXX11_FEATURES})
 set_target_properties(openMVG_system PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
 set_property(TARGET openMVG_system PROPERTY FOLDER OpenMVG/OpenMVG)
-install(TARGETS openMVG_system DESTINATION lib/ EXPORT openMVG-targets)
+install(TARGETS openMVG_system EXPORT openMVG-targets
+LIBRARY DESTINATION lib
+ARCHIVE DESTINATION lib
+RUNTIME DESTINATION bin)
 
 add_library(openMVG_progress_test INTERFACE)
 target_link_libraries(openMVG_progress_test INTERFACE ${OPENMVG_LIBRARY_DEPENDENCIES})
diff --git a/src/software/Localization/CMakeLists.txt b/src/software/Localization/CMakeLists.txt
index 2f60393..6d5a6fc 100644
--- a/src/software/Localization/CMakeLists.txt
+++ b/src/software/Localization/CMakeLists.txt
@@ -12,6 +12,7 @@ target_link_libraries(openMVG_main_SfM_Localization
   openMVG_exif
   ${STLPLUS_LIBRARY}
   vlsift
+  cereal
   )
 
 # Installation rules
diff --git a/src/software/SfM/CMakeLists.txt b/src/software/SfM/CMakeLists.txt
index 013a6c8..4757618 100644
--- a/src/software/SfM/CMakeLists.txt
+++ b/src/software/SfM/CMakeLists.txt
@@ -45,6 +45,7 @@ target_link_libraries(openMVG_main_ComputeFeatures
     openMVG_sfm
     ${STLPLUS_LIBRARY}
     vlsift
+    cereal
 )
 if (MSVC)
   set_target_properties(openMVG_main_ComputeFeatures PROPERTIES COMPILE_FLAGS "/bigobj")
diff --git a/src/third_party/CMakeLists.txt b/src/third_party/CMakeLists.txt
index b71dfab..ad98e51 100644
--- a/src/third_party/CMakeLists.txt
+++ b/src/third_party/CMakeLists.txt
@@ -18,7 +18,7 @@ add_subdirectory(stlplus3)
 set(STLPLUS_LIBRARY openMVG_stlplus PARENT_SCOPE)
 
 # Add graph library
-if(DEFINED OpenMVG_USE_INTERNAL_LEMON)
+if(OpenMVG_USE_INTERNAL_LEMON)
   add_subdirectory(lemon)
   set_property(TARGET openMVG_lemon PROPERTY FOLDER OpenMVG/3rdParty/lemon)
   set_property(TARGET check PROPERTY FOLDER OpenMVG/3rdParty/lemon)
@@ -68,7 +68,7 @@ endif (NOT TIFF_FOUND)
 add_subdirectory(vectorGraphics)
 
 # Add ceres-solver (A Nonlinear Least Squares Minimizer)
-if (DEFINED OpenMVG_USE_INTERNAL_CERES)
+if (OpenMVG_USE_INTERNAL_CERES)
   add_subdirectory(cxsparse)
   add_subdirectory(ceres-solver)
   set_property(TARGET openMVG_cxsparse PROPERTY FOLDER OpenMVG/3rdParty/ceres)
@@ -76,7 +76,7 @@ if (DEFINED OpenMVG_USE_INTERNAL_CERES)
 endif()
 
 # Add an Approximate Nearest Neighbor library
-if (DEFINED OpenMVG_USE_INTERNAL_FLANN)
+if (OpenMVG_USE_INTERNAL_FLANN)
   set(FLANN_INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/include/openMVG/third_party/flann/src/cpp)
   add_subdirectory(flann)
 endif()
@@ -90,7 +90,7 @@ add_subdirectory(fast)
 ##
 # Install Header only libraries if necessary
 ##
-if (DEFINED OpenMVG_USE_INTERNAL_EIGEN)
+if (OpenMVG_USE_INTERNAL_EIGEN)
   #Configure Eigen install
   set(EIGEN_INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/include/openMVG/third_party/eigen)
   add_subdirectory(eigen)
diff --git a/src/third_party/stlplus3/CMakeLists.txt b/src/third_party/stlplus3/CMakeLists.txt
index 334c595..336c6b6 100644
--- a/src/third_party/stlplus3/CMakeLists.txt
+++ b/src/third_party/stlplus3/CMakeLists.txt
@@ -19,11 +19,15 @@ else()
 endif()
 set_property(TARGET openMVG_stlplus PROPERTY FOLDER OpenMVG/3rdParty)
 
-install(
-  TARGETS openMVG_stlplus
-  DESTINATION lib
-  EXPORT openMVG-targets
-)
+# install(
+#   TARGETS openMVG_stlplus
+#   DESTINATION lib
+#   EXPORT openMVG-targets
+# )
+install(TARGETS openMVG_stlplus EXPORT openMVG-targets
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+        RUNTIME DESTINATION bin)
 
 if(STLPLUS_INCLUDE_INSTALL_DIR)
   set(INCLUDE_INSTALL_DIR ${STLPLUS_INCLUDE_INSTALL_DIR})
